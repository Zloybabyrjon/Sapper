<?php
require __DIR__ . '/../vendor/autoload.php';

use Egor\Sapper\Game;

session_start();

$rows = $_GET['rows'] ?? 10;
$cols = $_GET['cols'] ?? 10;
$mines = $_GET['mines'] ?? 10;

if (!isset($_SESSION['game']) || isset($_GET['reset'])) {
    $_SESSION['game'] = new Game($rows, $cols, $mines);
}

$game = $_SESSION['game'];
$board = $game->getBoard();

// –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $row = $_POST['row'];
    $col = $_POST['col'];

    if (isset($_POST['flag'])) {
        $board->getCell($row, $col)->toggleFlag(); // –ï—Å–ª–∏ —Ñ–ª–∞–∂–æ–∫
    } else {
        $game->play((int)$row, (int)$col); // –ï—Å–ª–∏ –Ω–µ —Ñ–ª–∞–∂–æ–∫
    }
    header('Location: index.php');
    exit();
}
?>
<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <title>–°–∞–ø—ë—Ä</title>
    <link rel="stylesheet" href="styles.css">
</head>

<body>
    <h1>–°–∞–ø—ë—Ä</h1>
    <div class="options">
        <form action="index.php" method="get">
            <label for="rows">–°—Ç—Ä–æ–∫–∏:</label>
            <input type="number" id="rows" name="rows" value="<?= $rows ?>">
            <label for="cols">–°—Ç–æ–ª–±—Ü—ã:</label>
            <input type="number" id="cols" name="cols" value="<?= $cols ?>">
            <label for="mines">–ú–∏–Ω—ã:</label>
            <input type="number" id="mines" name="mines" value="<?= $mines ?>">
            <button type="submit" name="reset" value="1">–ù–æ–≤–∞—è –∏–≥—Ä–∞</button>
        </form>
        <button id="rulesButton">–ü—Ä–∞–≤–∏–ª–∞</button>
    </div>
    <div id="rulesModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –≤ –°–∞–ø—ë—Ä</h2>
            <p>–¶–µ–ª—å –∏–≥—Ä—ã –≤ –°–∞–ø—ë—Ä ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–µ –ø–æ–ª–µ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ —Å–∫—Ä—ã—Ç—ã–µ ¬´–º–∏–Ω—ã¬ª, –Ω–µ –ø–æ–¥–æ—Ä–≤–∞–≤ –Ω–∏ –æ–¥–Ω–æ–π –∏–∑ –Ω–∏—Ö.</p>
            <p>
                –ö–∞–∂–¥–∞—è –∫–ª–µ—Ç–∫–∞ –Ω–∞ –ø–æ–ª–µ –º–æ–∂–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –æ–¥–Ω–æ–º –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π:
            <ul>
                <li>–°–∫—Ä—ã—Ç–∞—è, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ # –Ω–∞ –∏–≥—Ä–æ–≤–æ–º –ø–æ–ª–µ</li>
                <li>–û—Ç–º–µ—á–µ–Ω–Ω–∞—è —Ñ–ª–∞–∂–∫–æ–º, –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –º–∏–Ω–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ üö© –Ω–∞ –∏–≥—Ä–æ–≤–æ–º –ø–æ–ª–µ</li>
                <li>–û—Ç–∫—Ä—ã—Ç–∞—è –∏ –ø—É—Å—Ç–∞—è, —á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –º–∏–Ω —Ä—è–¥–æ–º —Å –Ω–µ–π</li>
                <li>–û—Ç–∫—Ä—ã—Ç–∞—è –∏ —Å —á–∏—Å–ª–æ–º, –æ–±–æ–∑–Ω–∞—á–∞—é—â–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω, –ø—Ä–∏–ª–µ–≥–∞—é—â–∏—Ö –∫ –Ω–µ–π.</li>
                <li>–û—Ç–∫—Ä—ã—Ç–∞—è –∏ —Å –º–∏–Ω–æ–π, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ *.</li>
            </ul>
            </p>
            <p>
                –©–µ–ª–∫–Ω–∏—Ç–µ –ª–µ–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏ –ø–æ —Å–∫—Ä—ã—Ç–æ–π –∫–ª–µ—Ç–∫–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –µ–µ.
                –ù–∞–∂–º–∏—Ç–µ F –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ —á—Ç–æ –±—ã –ø–æ—Å—Ç–∞–≤–∏—Ç—å/—É–±—Ä–∞—Ç—å —Ñ–ª–∞–∂–æ–∫.
            </p>
            <p>–ï—Å–ª–∏ –≤—ã –æ—Ç–∫—Ä–æ–µ—Ç–µ –∫–ª–µ—Ç–∫—É —Å –º–∏–Ω–æ–π, –∏–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –ï—Å–ª–∏ –≤–∞–º —É–¥–∞—Å—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—å –≤—Å–µ –∫–ª–µ—Ç–∫–∏, –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –º–∏–Ω, –≤—ã –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç–µ!</p>
        </div>
    </div>
    <div class="board">
        <?php if ($game->isGameOver() || $game->isGameWon()): ?>
            <?php if ($game->isGameOver()): ?>
                <h2 class="game-over-message">–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –í—ã –Ω–∞—Ç–∫–Ω—É–ª–∏—Å—å –Ω–∞ –º–∏–Ω—É.</h2>
            <?php else: ?>
                <h2 class="game-win-message">–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!</h2>
            <?php endif; ?>
            <table class="game-table">
                <?php for ($row = 0; $row < $board->getRows(); $row++): ?>
                    <tr>
                        <?php for ($col = 0; $col < $board->getCols(); $col++): ?>
                            <td>
                                <span class="cell <?php if ($board->getCell($row, $col)->isMine()): ?>mine<?php endif; ?>"><?= $board->getCell($row, $col)->getDisplayValue() ?></span>
                            </td>
                        <?php endfor; ?>
                    </tr>
                <?php endfor; ?>
            </table>
        <?php else: ?>
            <table class="game-table">
                <?php for ($row = 0; $row < $board->getRows(); $row++): ?>
                    <tr>
                        <?php for ($col = 0; $col < $board->getCols(); $col++): ?>
                            <td>
                                <form action="index.php" method="post" class="cell-form">
                                    <input type="hidden" name="row" value="<?= $row ?>">
                                    <input type="hidden" name="col" value="<?= $col ?>">
                                    <button type="submit" class="cell"> <?= $board->getCell($row, $col)->getDisplayValue() ?></button>
                                </form>
                            </td>
                        <?php endfor; ?>
                    </tr>
                <?php endfor; ?>
            </table>
        <?php endif; ?>
    </div>
    <script>
        // Get the modal
        var modal = document.getElementById("rulesModal");
        // Get the button that opens the modal
        var btn = document.getElementById("rulesButton");
        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];
        // When the user clicks the button, open the modal
        btn.onclick = function() {
            modal.style.display = "block";
        }
        // When the user clicks on <span> (x), close the modal
        span.onclick = function() {
            modal.style.display = "none";
        }
        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
        document.addEventListener('keydown', function(event) {
            if (event.key === 'f' || event.key === 'F') {
                const focusedElement = document.activeElement;
                if (focusedElement && focusedElement.matches(".cell")) {
                    const form = focusedElement.closest('.cell-form');
                    const formData = new FormData(form);
                    formData.append('flag', 'true');
                    fetch(form.action, {
                            method: 'POST',
                            body: formData
                        })
                        .then(response => {
                            if (response.ok) {
                                window.location.reload();
                            }
                        });
                }
            }
        });
    </script>
</body>

</html>